{"version":3,"file":"static/js/236.0b67272c.chunk.js","mappings":"oSAOaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,GAAI,CAAEC,eAAgB,UAAtC,UACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAKC,EAAG,EAAR,WACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBACA,SAAC,KAAD,CAAQC,cAlBM,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAekCC,SAbzB,SAAC,EAAD,GAA+C,IAA5CH,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAA8B,EAAhBE,UACjD,IAAKJ,IAASC,IAAUC,EACtB,OAAOG,EAAAA,GAAAA,MAAY,gCAErBjB,GAASkB,EAAAA,EAAAA,IAAS,CAAEN,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,IAElC,EAOO,SACG,SAAAK,GACC,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,MAAM,WACNC,YAAY,SAAC,KAAD,CAAcX,KAAK,SAC/BY,OAAO,QACPC,WAAS,EACTb,KAAK,OACLc,KAAK,OACLC,MAAOR,EAAMS,OAAOf,OAASM,EAAMU,QAAQhB,SAE7C,SAAC,KAAD,CACEO,GAAIC,EAAAA,EACJC,MAAM,QACNC,YAAY,SAAC,KAAD,CAAcX,KAAK,UAC/BY,OAAO,QACPC,WAAS,EACTb,KAAK,QACLc,KAAK,QACLC,MAAOR,EAAMS,OAAOf,OAASM,EAAMU,QAAQhB,SAG7C,SAAC,KAAD,CACEO,GAAIC,EAAAA,EACJC,MAAM,WACNC,YAAY,SAAC,KAAD,CAAcX,KAAK,aAC/BY,OAAO,QACPC,WAAS,EACTb,KAAK,WACLc,KAAK,WACLC,MAAOR,EAAMS,OAAOd,UAAYK,EAAMU,QAAQf,YAGhD,SAACgB,EAAA,EAAD,CAAQpB,QAAQ,UAAUgB,KAAK,SAASK,MAAM,YAGnD,UAMZ,ECnED,EAHiB,WACf,OAAO,SAAChC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { toast } from 'react-hot-toast';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Grid, TextField, Paper, Box, Typography } from '@mui/material';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const initualValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    if (!name || !email || !password) {\n      return toast.error('The fields must be filled in');\n    }\n    dispatch(register({ name, email, password }));\n    // resetForm();\n  };\n\n  return (\n    <Grid container sx={{ justifyContent: 'center' }}>\n      <Paper>\n        <Box p={5}>\n          <Typography variant=\"h4\">Login</Typography>\n          <Formik initialValues={initualValues} onSubmit={handleSubmit}>\n            {props => {\n              return (\n                <Form>\n                  <Field\n                    as={TextField}\n                    label=\"Username\"\n                    helperText={<ErrorMessage name=\"name\" />}\n                    margin=\"dense\"\n                    fullWidth\n                    name=\"name\"\n                    type=\"text\"\n                    error={props.errors.email && props.touched.email}\n                  />\n                  <Field\n                    as={TextField}\n                    label=\"Email\"\n                    helperText={<ErrorMessage name=\"email\" />}\n                    margin=\"dense\"\n                    fullWidth\n                    name=\"email\"\n                    type=\"email\"\n                    error={props.errors.email && props.touched.email}\n                  />\n\n                  <Field\n                    as={TextField}\n                    label=\"Password\"\n                    helperText={<ErrorMessage name=\"password\" />}\n                    margin=\"dense\"\n                    fullWidth\n                    name=\"password\"\n                    type=\"password\"\n                    error={props.errors.password && props.touched.password}\n                  />\n\n                  <Button variant=\"default\" type=\"submit\" title=\"Login\" />\n                </Form>\n              );\n            }}\n          </Formik>\n        </Box>\n      </Paper>\n    </Grid>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\nexport default Register;\n"],"names":["RegisterForm","dispatch","useDispatch","Grid","container","sx","justifyContent","Paper","Box","p","Typography","variant","initialValues","name","email","password","onSubmit","resetForm","toast","register","props","as","TextField","label","helperText","margin","fullWidth","type","error","errors","touched","Button","title"],"sourceRoot":""}